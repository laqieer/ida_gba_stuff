import idc 
import idaapi
import struct

ROM_SIGNATURE_OFFSET 	= 4
ROM_SIGNATURE        	= "\x24\xFF\xAE\x51" # TO FIX more than 4 bytes
ROM_FORMAT_NAME        	= "Nintendo GBA ROM"
SIZE_HEADER		= 0xC0
ROM_START		= 0x08000000
ROM_SIZE		= 0x01000000

def dwordAt(li, off):
	li.seek(off)
	s = li.read(4)
	if len(s) < 4: 
		return 0
	return struct.unpack('<I', s)[0]

def memset_seg(ea, size):
	for i in xrange(0, size):
		idc.PatchByte(ea + i, 0)

def accept_file(li, filename):        
    	if not filename.endswith('.gba'):
                return 0

	# check the Nintendo Logo
	li.seek(ROM_SIGNATURE_OFFSET)
	if li.read(4) == ROM_SIGNATURE:
		# accept the file
		return ROM_FORMAT_NAME

	# unrecognized format
	return 0

def load_file(li, neflags, format):
	if format != ROM_FORMAT_NAME:
		Warning("Unknown format name: '%s'" % format)
    		return 0
	jump = dwordAt(li, 0)
	# Test ARM branch
	if jump & 0xFF000000 != 0xEA000000:
		Warning("Unknown format name: '%s'" % format)
    		return 0
	idaapi.set_processor_type("arm", SETPROC_ALL|SETPROC_FATAL)
	idaapi.set_target_assembler(1)  # set gas style
	li.seek(0, idaapi.SEEK_END)
	size = li.tell()

	# Adding Header Section
	#idc.AddSeg(ROM_START, ROM_START + SIZE_HEADER, 0, 1, idaapi.saRelPara, idaapi.scPub)
	#idc.RenameSeg(ROM_START, "HEADER")
	#idc.SetSegmentType(ROM_START, idc.SEG_CODE)
	#li.seek(0)
	#li.file2base(0, ROM_START, ROM_START + SIZE_HEADER, 0)

	# Adding OEP
	idaapi.add_entry(ROM_START, ROM_START, "start", 1)
	idaapi.cvar.inf.startIP = ROM_START
	idaapi.cvar.inf.beginEA = ROM_START

	# Adding ROM Section
	idc.AddSeg(ROM_START, ROM_START + ROM_SIZE, 0, 1, idaapi.saRelPara, idaapi.scPub)
	idc.RenameSeg(ROM_START, "ROM")
	idc.SetSegmentType(ROM_START, idc.SEG_CODE)
	li.seek(0)
	li.file2base(0, ROM_START, ROM_START + size, 0)

	# Adding EWRAM
	idc.AddSeg(0x02000000, 0x02040000, 0, 1, idaapi.saRelPara, idaapi.scPub)
	idc.RenameSeg(0x02000000, "EWRAM")
	memset_seg(0x02000000, 0x40000)

	# Adding IWRAM
	idc.AddSeg(0x03000000, 0x03008000, 0, 1, idaapi.saRelPara, idaapi.scPub)
	idc.RenameSeg(0x03000000, "IWRAM")
	memset_seg(0x03000000, 0x8000)

	# Adding IO / Registers
	idc.AddSeg(0x04000000, 0x04000400, 0, 1, idaapi.saRelPara, idaapi.scPub)
	idc.RenameSeg(0x04000000, "IOregisters")
	memset_seg(0x04000000, 0x400)

	# Adding BIOS System ROM
	idc.AddSeg(0x00000000, 0x00004000, 0, 1, idaapi.saRelPara, idaapi.scPub)
	idc.RenameSeg(0x00000000, "BIOS")
	memset_seg(0x00000000, 0x4000)
	idc.SetSegmentType(0x0000000, idc.SEG_CODE)

	idaapi.add_long_cmt(ROM_START, True, "ROM HEADER")
	li.seek(0xA0)
	idc.ExtLinA(ROM_START, 1,  "; Game Title : %s" % li.read(12))
	idc.ExtLinA(ROM_START, 2,  "; Game Code : %s" % li.read(4))
	idc.ExtLinA(ROM_START, 3,  "; Marker Code : %s" % li.read(2))
	idc.ExtLinA(ROM_START, 4,  "; Fixed value : %02X" % struct.unpack("<B", li.read(1))[0])
	idc.ExtLinA(ROM_START, 5,  "; Main unit code : %02X" % struct.unpack("<B", li.read(1))[0])
	idc.ExtLinA(ROM_START, 6,  "; Device type : %02X" % struct.unpack("<B", li.read(1))[0])
	idc.ExtLinA(ROM_START, 7,  "; Reserved Area : db 7 dup(0)")
	li.read(7)
	idc.ExtLinA(ROM_START, 8,  "; Software version %02X" % struct.unpack("<B", li.read(1))[0])
	idc.ExtLinA(ROM_START, 9,  "; Complement Check %02X" % struct.unpack("<B", li.read(1))[0])
	idc.ExtLinA(ROM_START, 10,  "; Reserved Area : db 2 dup(0)")
	
	io_naming()
	DelFunction(0)  # delete sub_0
	crt0_naming()   # mark Start Up Routine
	print("[+] Load OK")
	return 1

def io_naming():
	MakeNameEx(0x04000000, "LCDControl", SN_NOCHECK | SN_NOWARN)
	MakeWord(0x04000000)
	MakeNameEx(0x04000002, "Undocumented-GreenSwap", SN_NOCHECK | SN_NOWARN)
	MakeWord(0x04000002)
	MakeNameEx(0x04000004, "GeneralLCDStatus(STAT,LYC)", SN_NOCHECK | SN_NOWARN)
	MakeWord(0x04000004)
	MakeNameEx(0x04000006, "VerticalCounter(LY)", SN_NOCHECK | SN_NOWARN)
	MakeWord(0x04000006)
	MakeNameEx(0x04000008, "BG0Control", SN_NOCHECK | SN_NOWARN)
	MakeWord(0x04000008)
	MakeNameEx(0x0400000A, "BG1Control", SN_NOCHECK | SN_NOWARN)
	MakeWord(0x0400000A)
	MakeNameEx(0x0400000C, "BG2Control", SN_NOCHECK | SN_NOWARN)
	MakeWord(0x0400000C)
	MakeNameEx(0x0400000E, "BG3Control", SN_NOCHECK | SN_NOWARN)
	MakeWord(0x0400000E)
	MakeNameEx(0x04000010, "BG0X-Offset", SN_NOCHECK | SN_NOWARN)
	MakeWord(0x04000010)
	MakeNameEx(0x04000012, "BG0Y-Offset", SN_NOCHECK | SN_NOWARN)
	MakeWord(0x04000012)
	MakeNameEx(0x04000014, "BG1X-Offset", SN_NOCHECK | SN_NOWARN)
	MakeWord(0x04000014)
	MakeNameEx(0x04000016, "BG1Y-Offset", SN_NOCHECK | SN_NOWARN)
	MakeWord(0x04000016)
	MakeNameEx(0x04000018, "BG2X-Offset", SN_NOCHECK | SN_NOWARN)
	MakeWord(0x04000018)
	MakeNameEx(0x0400001A, "BG2Y-Offset", SN_NOCHECK | SN_NOWARN)
	MakeWord(0x0400001A)
	MakeNameEx(0x0400001C, "BG3X-Offset", SN_NOCHECK | SN_NOWARN)
	MakeWord(0x0400001C)
	MakeNameEx(0x0400001E, "BG3Y-Offset", SN_NOCHECK | SN_NOWARN)
	MakeWord(0x0400001E)
	MakeNameEx(0x04000020, "BG2Rotation/ScalingParameterA(dx)", SN_NOCHECK | SN_NOWARN)
	MakeWord(0x04000020)
	MakeNameEx(0x04000022, "BG2Rotation/ScalingParameterB(dmx)", SN_NOCHECK | SN_NOWARN)
	MakeWord(0x04000022)
	MakeNameEx(0x04000024, "BG2Rotation/ScalingParameterC(dy)", SN_NOCHECK | SN_NOWARN)
	MakeWord(0x04000024)
	MakeNameEx(0x04000026, "BG2Rotation/ScalingParameterD(dmy)", SN_NOCHECK | SN_NOWARN)
	MakeWord(0x04000026)
	MakeNameEx(0x04000028, "BG2ReferencePointX-Coordinate", SN_NOCHECK | SN_NOWARN)
	MakeDword(0x04000028)
	MakeNameEx(0x0400002C, "BG2ReferencePointY-Coordinate", SN_NOCHECK | SN_NOWARN)
	MakeDword(0x0400002C)
	MakeNameEx(0x04000030, "BG3Rotation/ScalingParameterA(dx)", SN_NOCHECK | SN_NOWARN)
	MakeWord(0x04000030)
	MakeNameEx(0x04000032, "BG3Rotation/ScalingParameterB(dmx)", SN_NOCHECK | SN_NOWARN)
	MakeWord(0x04000032)
	MakeNameEx(0x04000034, "BG3Rotation/ScalingParameterC(dy)", SN_NOCHECK | SN_NOWARN)
	MakeWord(0x04000034)
	MakeNameEx(0x04000036, "BG3Rotation/ScalingParameterD(dmy)", SN_NOCHECK | SN_NOWARN)
	MakeWord(0x04000036)
	MakeNameEx(0x04000038, "BG3ReferencePointX-Coordinate", SN_NOCHECK | SN_NOWARN)
	MakeDword(0x04000038)
	MakeNameEx(0x0400003C, "BG3ReferencePointY-Coordinate", SN_NOCHECK | SN_NOWARN)
	MakeDword(0x0400003C)
	MakeNameEx(0x04000040, "Window0HorizontalDimensions", SN_NOCHECK | SN_NOWARN)
	MakeWord(0x04000040)
	MakeNameEx(0x04000042, "Window1HorizontalDimensions", SN_NOCHECK | SN_NOWARN)
	MakeWord(0x04000042)
	MakeNameEx(0x04000044, "Window0VerticalDimensions", SN_NOCHECK | SN_NOWARN)
	MakeWord(0x04000044)
	MakeNameEx(0x04000046, "Window1VerticalDimensions", SN_NOCHECK | SN_NOWARN)
	MakeWord(0x04000046)
	MakeNameEx(0x04000048, "InsideofWindow0and1", SN_NOCHECK | SN_NOWARN)
	MakeWord(0x04000048)
	MakeNameEx(0x0400004A, "InsideofOBJWindow&OutsideofWindows", SN_NOCHECK | SN_NOWARN)
	MakeWord(0x0400004A)
	MakeNameEx(0x0400004C, "MosaicSize", SN_NOCHECK | SN_NOWARN)
	MakeWord(0x0400004C)
	MakeNameEx(0x0400004E, "Notused", SN_NOCHECK | SN_NOWARN)
	MakeNameEx(0x04000050, "ColorSpecialEffectsSelection", SN_NOCHECK | SN_NOWARN)
	MakeWord(0x04000050)
	MakeNameEx(0x04000052, "AlphaBlendingCoefficients", SN_NOCHECK | SN_NOWARN)
	MakeWord(0x04000052)
	MakeNameEx(0x04000054, "Brightness(Fade-In/Out)Coefficient", SN_NOCHECK | SN_NOWARN)
	MakeWord(0x04000054)
	MakeNameEx(0x04000056, "Notused", SN_NOCHECK | SN_NOWARN)
	MakeNameEx(0x04000060, "Channel1Sweepregister(NR10)", SN_NOCHECK | SN_NOWARN)
	MakeWord(0x04000060)
	MakeNameEx(0x04000062, "Channel1Duty/Length/Envelope(NR11,NR12)", SN_NOCHECK | SN_NOWARN)
	MakeWord(0x04000062)
	MakeNameEx(0x04000064, "Channel1Frequency/Control(NR13,NR14)", SN_NOCHECK | SN_NOWARN)
	MakeWord(0x04000064)
	MakeNameEx(0x04000066, "Notused", SN_NOCHECK | SN_NOWARN)
	MakeNameEx(0x04000068, "Channel2Duty/Length/Envelope(NR21,NR22)", SN_NOCHECK | SN_NOWARN)
	MakeWord(0x04000068)
	MakeNameEx(0x0400006A, "Notused", SN_NOCHECK | SN_NOWARN)
	MakeNameEx(0x0400006C, "Channel2Frequency/Control(NR23,NR24)", SN_NOCHECK | SN_NOWARN)
	MakeWord(0x0400006C)
	MakeNameEx(0x0400006E, "Notused", SN_NOCHECK | SN_NOWARN)
	MakeNameEx(0x04000070, "Channel3Stop/WaveRAMselect(NR30)", SN_NOCHECK | SN_NOWARN)
	MakeWord(0x04000070)
	MakeNameEx(0x04000072, "Channel3Length/Volume(NR31,NR32)", SN_NOCHECK | SN_NOWARN)
	MakeWord(0x04000072)
	MakeNameEx(0x04000074, "Channel3Frequency/Control(NR33,NR34)", SN_NOCHECK | SN_NOWARN)
	MakeWord(0x04000074)
	MakeNameEx(0x04000076, "Notused", SN_NOCHECK | SN_NOWARN)
	MakeNameEx(0x04000078, "Channel4Length/Envelope(NR41,NR42)", SN_NOCHECK | SN_NOWARN)
	MakeWord(0x04000078)
	MakeNameEx(0x0400007A, "Notused", SN_NOCHECK | SN_NOWARN)
	MakeNameEx(0x0400007C, "Channel4Frequency/Control(NR43,NR44)", SN_NOCHECK | SN_NOWARN)
	MakeWord(0x0400007C)
	MakeNameEx(0x0400007E, "Notused", SN_NOCHECK | SN_NOWARN)
	MakeNameEx(0x04000080, "ControlStereo/Volume/Enable(NR50,NR51)", SN_NOCHECK | SN_NOWARN)
	MakeWord(0x04000080)
	MakeNameEx(0x04000082, "ControlMixing/DMAControl", SN_NOCHECK | SN_NOWARN)
	MakeWord(0x04000082)
	MakeNameEx(0x04000084, "ControlSoundon/off(NR52)", SN_NOCHECK | SN_NOWARN)
	MakeWord(0x04000084)
	MakeNameEx(0x04000086, "Notused", SN_NOCHECK | SN_NOWARN)
	MakeNameEx(0x04000088, "SoundPWMControl", SN_NOCHECK | SN_NOWARN)
	MakeWord(0x04000088)
	MakeNameEx(0x0400008A, "Notused", SN_NOCHECK | SN_NOWARN)
	MakeNameEx(0x04000090, "Channel3WavePatternRAM(2banks!!)", SN_NOCHECK | SN_NOWARN)
	MakeNameEx(0x040000A0, "ChannelAFIFO,Data0-3", SN_NOCHECK | SN_NOWARN)
	MakeDword(0x040000A0)
	MakeNameEx(0x040000A4, "ChannelBFIFO,Data0-3", SN_NOCHECK | SN_NOWARN)
	MakeDword(0x040000A4)
	MakeNameEx(0x040000A8, "Notused", SN_NOCHECK | SN_NOWARN)
	MakeNameEx(0x040000B0, "DMA0SourceAddress", SN_NOCHECK | SN_NOWARN)
	MakeDword(0x040000B0)
	MakeNameEx(0x040000B4, "DMA0DestinationAddress", SN_NOCHECK | SN_NOWARN)
	MakeDword(0x040000B4)
	MakeNameEx(0x040000B8, "DMA0WordCount", SN_NOCHECK | SN_NOWARN)
	MakeWord(0x040000B8)
	MakeNameEx(0x040000BA, "DMA0Control", SN_NOCHECK | SN_NOWARN)
	MakeWord(0x040000BA)
	MakeNameEx(0x040000BC, "DMA1SourceAddress", SN_NOCHECK | SN_NOWARN)
	MakeDword(0x040000BC)
	MakeNameEx(0x040000C0, "DMA1DestinationAddress", SN_NOCHECK | SN_NOWARN)
	MakeDword(0x040000C0)
	MakeNameEx(0x040000C4, "DMA1WordCount", SN_NOCHECK | SN_NOWARN)
	MakeWord(0x040000C4)
	MakeNameEx(0x040000C6, "DMA1Control", SN_NOCHECK | SN_NOWARN)
	MakeWord(0x040000C6)
	MakeNameEx(0x040000C8, "DMA2SourceAddress", SN_NOCHECK | SN_NOWARN)
	MakeDword(0x040000C8)
	MakeNameEx(0x040000CC, "DMA2DestinationAddress", SN_NOCHECK | SN_NOWARN)
	MakeDword(0x040000CC)
	MakeNameEx(0x040000D0, "DMA2WordCount", SN_NOCHECK | SN_NOWARN)
	MakeWord(0x040000D0)
	MakeNameEx(0x040000D2, "DMA2Control", SN_NOCHECK | SN_NOWARN)
	MakeWord(0x040000D2)
	MakeNameEx(0x040000D4, "DMA3SourceAddress", SN_NOCHECK | SN_NOWARN)
	MakeDword(0x040000D4)
	MakeNameEx(0x040000D8, "DMA3DestinationAddress", SN_NOCHECK | SN_NOWARN)
	MakeDword(0x040000D8)
	MakeNameEx(0x040000DC, "DMA3WordCount", SN_NOCHECK | SN_NOWARN)
	MakeWord(0x040000DC)
	MakeNameEx(0x040000DE, "DMA3Control", SN_NOCHECK | SN_NOWARN)
	MakeWord(0x040000DE)
	MakeNameEx(0x040000E0, "Notused", SN_NOCHECK | SN_NOWARN)
	MakeNameEx(0x04000100, "Timer0Counter/Reload", SN_NOCHECK | SN_NOWARN)
	MakeWord(0x04000100)
	MakeNameEx(0x04000102, "Timer0Control", SN_NOCHECK | SN_NOWARN)
	MakeWord(0x04000102)
	MakeNameEx(0x04000104, "Timer1Counter/Reload", SN_NOCHECK | SN_NOWARN)
	MakeWord(0x04000104)
	MakeNameEx(0x04000106, "Timer1Control", SN_NOCHECK | SN_NOWARN)
	MakeWord(0x04000106)
	MakeNameEx(0x04000108, "Timer2Counter/Reload", SN_NOCHECK | SN_NOWARN)
	MakeWord(0x04000108)
	MakeNameEx(0x0400010A, "Timer2Control", SN_NOCHECK | SN_NOWARN)
	MakeWord(0x0400010A)
	MakeNameEx(0x0400010C, "Timer3Counter/Reload", SN_NOCHECK | SN_NOWARN)
	MakeWord(0x0400010C)
	MakeNameEx(0x0400010E, "Timer3Control", SN_NOCHECK | SN_NOWARN)
	MakeWord(0x0400010E)
	MakeNameEx(0x04000110, "Notused", SN_NOCHECK | SN_NOWARN)
	MakeNameEx(0x04000120, "SIOData(Normal-32bitMode)(sharedwithbelow!)", SN_NOCHECK | SN_NOWARN)
	MakeDword(0x04000120)
	MakeNameEx(0x04000120, "SIOData0(Parent)(Multi-PlayerMode)", SN_NOCHECK | SN_NOWARN)
	MakeWord(0x04000120)
	MakeNameEx(0x04000122, "SIOData1(1stChild)(Multi-PlayerMode)", SN_NOCHECK | SN_NOWARN)
	MakeWord(0x04000122)
	MakeNameEx(0x04000124, "SIOData2(2ndChild)(Multi-PlayerMode)", SN_NOCHECK | SN_NOWARN)
	MakeWord(0x04000124)
	MakeNameEx(0x04000126, "SIOData3(3rdChild)(Multi-PlayerMode)", SN_NOCHECK | SN_NOWARN)
	MakeWord(0x04000126)
	MakeNameEx(0x04000128, "SIOControlRegister", SN_NOCHECK | SN_NOWARN)
	MakeWord(0x04000128)
	MakeNameEx(0x0400012A, "SIOData(LocalofMulti-Player)(sharedbelow)", SN_NOCHECK | SN_NOWARN)
	MakeWord(0x0400012A)
	MakeNameEx(0x0400012A, "SIOData(Normal-8bitandUARTMode)", SN_NOCHECK | SN_NOWARN)
	MakeWord(0x0400012A)
	MakeNameEx(0x0400012C, "Notused", SN_NOCHECK | SN_NOWARN)
	MakeNameEx(0x04000130, "KeyStatus", SN_NOCHECK | SN_NOWARN)
	MakeWord(0x04000130)
	MakeNameEx(0x04000132, "KeyInterruptControl", SN_NOCHECK | SN_NOWARN)
	MakeWord(0x04000132)
	MakeNameEx(0x04000134, "SIOModeSelect/GeneralPurposeData", SN_NOCHECK | SN_NOWARN)
	MakeWord(0x04000134)
	MakeNameEx(0x04000136, "IRAncient-InfraredRegister(Prototypesonly)", SN_NOCHECK | SN_NOWARN)
	MakeNameEx(0x04000138, "Notused", SN_NOCHECK | SN_NOWARN)
	MakeNameEx(0x04000140, "SIOJOYBusControl", SN_NOCHECK | SN_NOWARN)
	MakeWord(0x04000140)
	MakeNameEx(0x04000142, "Notused", SN_NOCHECK | SN_NOWARN)
	MakeNameEx(0x04000150, "SIOJOYBusReceiveData", SN_NOCHECK | SN_NOWARN)
	MakeDword(0x04000150)
	MakeNameEx(0x04000154, "SIOJOYBusTransmitData", SN_NOCHECK | SN_NOWARN)
	MakeDword(0x04000154)
	MakeNameEx(0x04000158, "SIOJOYBusReceiveStatus", SN_NOCHECK | SN_NOWARN)
	MakeWord(0x04000158)
	MakeNameEx(0x0400015A, "Notused", SN_NOCHECK | SN_NOWARN)
	MakeNameEx(0x04000200, "InterruptEnableRegister", SN_NOCHECK | SN_NOWARN)
	MakeWord(0x04000200)
	MakeNameEx(0x04000202, "InterruptRequestFlags/IRQAcknowledge", SN_NOCHECK | SN_NOWARN)
	MakeWord(0x04000202)
	MakeNameEx(0x04000204, "GamePakWaitstateControl", SN_NOCHECK | SN_NOWARN)
	MakeWord(0x04000204)
	MakeNameEx(0x04000206, "Notused", SN_NOCHECK | SN_NOWARN)
	MakeNameEx(0x04000208, "InterruptMasterEnableRegister", SN_NOCHECK | SN_NOWARN)
	MakeWord(0x04000208)
	MakeNameEx(0x0400020A, "Notused", SN_NOCHECK | SN_NOWARN)
	MakeNameEx(0x04000300, "Undocumented-PostBootFlag", SN_NOCHECK | SN_NOWARN)
	MakeByte(0x04000300)
	MakeNameEx(0x04000301, "Undocumented-PowerDownControl", SN_NOCHECK | SN_NOWARN)
	MakeByte(0x04000301)
	MakeNameEx(0x04000302, "Notused", SN_NOCHECK | SN_NOWARN)
	MakeNameEx(0x04000411, "Notused", SN_NOCHECK | SN_NOWARN)
	MakeNameEx(0x04000800, "Undocumented-InternalMemoryControl(R/W)", SN_NOCHECK | SN_NOWARN)
	MakeDword(0x04000800)
	MakeNameEx(0x04000804, "Notused", SN_NOCHECK | SN_NOWARN)

def crt0_naming():
        MakeNameEx(0x08000000, "_start", SN_NOCHECK)
        MakeCode(0x08000000)
        MakeNameEx(0x08000004, "rom_header", SN_NOCHECK)
        MakeNameEx(0x080000C0, "start_vector", SN_NOCHECK)

def main():
	return 0
